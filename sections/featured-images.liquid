{{ 'component-image-with-text.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="section-{{ section.id }}-padding gradient {{ section.settings.custom_class }}">
  <div class="page-width">

    <div class="featured_images isolate{% if settings.text_boxes_border_thickness > 0 and settings.text_boxes_border_opacity > 0 and settings.media_border_thickness > 0 and settings.media_border_opacity > 0 %} collapse-borders{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
      <div class="featured_images_block">

        <div class="featured_images__text-item text_item_block_1">
          {%- for block in section.blocks limit: 2 -%}
            <div id="{{ block.settings.heading | handleize }}" class="featured_images__content content_{{ forloop.index }}">
              <h2 class="featured_images__heading inline-richtext">{{ block.settings.heading }}</h2>
              <div class="featured_images__text rte body">{{ block.settings.text }}</div>
            </div>
          {%- endfor -%}
        </div>

        <div class="featured_images__media-item">
          <div class="featured_images__media {% if section.settings.desk_image == blank %} featured_images__media--placeholder placeholder{% endif %}">
            {%- if section.settings.desk_image != blank -%}
              <span class="desktop_img">{{ section.settings.desk_image | image_url: width: 1500 | image_tag }}</span>
            {%- else -%}
              {{ 'detailed-apparel-1' | placeholder_svg_tag: 'placeholder-svg' }}
            {%- endif -%}
            {%- if section.settings.tab_image != blank -%}
              <span class="tab_img">
                {{ section.settings.tab_image | image_url: width: 1400 | image_tag }}
                <div class="mobile_handle">
                  {%- for block in section.blocks -%}
                    {% assign class_data = '' %}
                    {% if forloop.index == 1 or forloop.index == 2 %}
                      {% assign class_data = 'handle_block_1' %}
                    {% elsif forloop.index == 3 or forloop.index == 4 %}
                      {% assign class_data = 'handle_block_2' %}
                    {% endif %}
                    <div class="featured_images__handle img_handle_{{ forloop.index }} {{ class_data }}" data-id="{{ block.settings.heading | handleize }}">
                      <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="20" cy="20" r="19.5" fill="white" stroke="#707070"/><path d="M24.9001 22.719H20.7201V27.174H18.2561V22.719H14.0981V20.508H18.2561V16.064H20.7201V20.508H24.9001V22.719Z" fill="#707070"/></svg>
                    </div>
                  {%- endfor -%}
                </div>
              </span>
            {% endif %}
          </div>
        </div>

        <div class="featured_images__text-item text_item_block_2">
          {%- for block in section.blocks offset: 2 -%}
            <div id="{{ block.settings.heading | handleize }}" class="featured_images__content content_{{ forloop.index }}">
              <h2 class="featured_images__heading inline-richtext">{{ block.settings.heading }}</h2>
              <div class="featured_images__text rte body">{{ block.settings.text }}</div>
            </div>
          {%- endfor -%}
        </div>

      </div>
    </div>

  </div>
</div>

{% schema %}
{
  "name": "Featured Images",
  "class": "section sec_featured_images",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "text",
      "id": "custom_class",
      "label": "Custom Class"
    },
    {
      "type": "image_picker",
      "id": "desk_image",
      "label": "Desk Image"
    },
    {
      "type": "image_picker",
      "id": "tab_image",
      "label": "Tab Image"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "text",
      "name": "t:sections.image-with-text.blocks.text.name",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "default": "t:sections.image-with-text.blocks.heading.settings.heading.default",
          "label": "t:sections.image-with-text.blocks.heading.settings.heading.label"
        },
        {
          "type": "richtext",
          "id": "text",
          "default": "t:sections.image-with-text.blocks.text.settings.text.default",
          "label": "t:sections.image-with-text.blocks.text.settings.text.label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Featured Images",
      "blocks": [
        {
          "type": "text"
        },
        {
          "type": "text"
        },
        {
          "type": "text"
        },
        {
          "type": "text"
        }
      ]
    }
  ]
}
{% endschema %}

{% javascript %}
document.addEventListener("DOMContentLoaded", function () {
  const featuredImages = document.querySelectorAll(".collection_featured_img .featured_images__handle");
  if (featuredImages.length > 0) {
    featuredImages.forEach((image) => {
      image.addEventListener("click", function () {
        let dataId = this.getAttribute("data-id");
        featuredImages.forEach((sibling) => sibling.classList.remove("active"));
        this.classList.add("active");
        let parentDOM = this.closest(".sec_featured_images");
        if (parentDOM) {
          let textItems = parentDOM.querySelectorAll(".featured_images__text-item .featured_images__content");
          textItems.forEach((item) => item.classList.remove("active"));
          let matchingItem = parentDOM.querySelector(`.featured_images__text-item .featured_images__content[id='${dataId}']`);
          if (matchingItem) {
            matchingItem.classList.add("active");
          }
        }
      });
    });
  }
});
{% endjavascript %}